openapi: 3.0.2
info:
  title: 'Producten en Diensten Catalogus (PDC)'
  version: 0.0.1
  description: |
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar. 
          
    Word lid van het slackkanaal [https://zaakonline.slack.com](https://zaakonline.slack.com) voor ondersteuning door het ontwikkel team. En krijg regelmatig updates over de ontwikkelingen op het gebied van de zaakonline componenten.
            
    Om het voor alle partijen zo makkelijk mogelijk te maken, stellen we zo veel mogelijk informatie over dit component openbaar beschikbaar.
    - [datamodel als pdf](/schema/datamodel.pdf)
    - [datamodel als mwb](/schema/datamodel.mwb)
    - [codebase op github]()
    - [codebase als zip](/archive/master.zip)
    - [docker container](/) 
    - [online demo]()
            
    
    Applicaties kunnen op deze API alleen wijzigingen uitvoeren waarvoor zij over de juiste rechten(scopes) beschikken. De op deze api beschikbare scopes zijn:
    - adres:schrijven
    - adres:lezen
    - adres:maken
    - adres:verwijderen   
                     
    Voor het gebruik van deze applicatie is een JWT Token nodig, deze hangt altijd vast aan een applicatie, ofwel user. Geldige JWT Tokens worden aangemaakt bij het registreren van een applicatie en kennen een beperkte houdbaarheid. 
    JWT Tokens kunnen zowel worden verlengd, als opnieuw worden aangevraagd, dit aan de hand van de applicatie id en sleutel.
    Let er bij het meegeven van JWT tokens op dat deze moet worden voorafgegaan door een Bearer en een spatie, onder de header Authorization. De volledig naam wordt daarmee: 'Authorization: Bearer [TOKEN]'.
    
paths:
  /cataloguses:
    get:
      tags:
        - Catalogus
      operationId: getCatalogusCollection
      summary: 'Retrieves the collection of Catalogus resources.'
      responses:
        200:
          description: 'Catalogus collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalogus-read'
      parameters:
        -
          name: rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Catalogus
      operationId: postCatalogusCollection
      summary: 'Creates a Catalogus resource.'
      responses:
        201:
          description: 'Catalogus resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
          links:
            GetCatalogusItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCatalogusItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /cataloguses/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
        description: 'The new Catalogus resource'
  '/cataloguses/{id}':
    get:
      tags:
        - Catalogus
      operationId: getCatalogusItem
      summary: 'Retrieves a Catalogus resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Catalogus resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Catalogus
      operationId: deleteCatalogusItem
      summary: 'Removes the Catalogus resource.'
      responses:
        204:
          description: 'Catalogus resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Catalogus
      operationId: putCatalogusItem
      summary: 'Replaces the Catalogus resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Catalogus resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
        description: 'The updated Catalogus resource'
    patch:
      tags:
        - Catalogus
      operationId: patchCatalogusItem
      summary: 'Updates the Catalogus resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Catalogus resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Catalogus-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Catalogus-write'
        description: 'The updated Catalogus resource'
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Group resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    patch:
      tags:
        - Group
      operationId: patchGroupItem
      summary: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
  /products:
    get:
      tags:
        - Product
      operationId: getProductCollection
      summary: 'Retrieves the collection of Product resources.'
      responses:
        200:
          description: 'Product collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-read'
      parameters:
        -
          name: sku
          in: query
          required: false
          schema:
            type: string
        -
          name: 'sku[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Product
      operationId: postProductCollection
      summary: 'Creates a Product resource.'
      responses:
        201:
          description: 'Product resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
          links:
            GetProductItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProductItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /products/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The new Product resource'
  '/products/{id}':
    get:
      tags:
        - Product
      operationId: getProductItem
      summary: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Product resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Product
      operationId: deleteProductItem
      summary: 'Removes the Product resource.'
      responses:
        204:
          description: 'Product resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Product
      operationId: putProductItem
      summary: 'Replaces the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
    patch:
      tags:
        - Product
      operationId: patchProductItem
      summary: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Product resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Product-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Product-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Product-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Product-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-write'
        description: 'The updated Product resource'
  /suppliers:
    get:
      tags:
        - Supplier
      operationId: getSupplierCollection
      summary: 'Retrieves the collection of Supplier resources.'
      responses:
        200:
          description: 'Supplier collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
    post:
      tags:
        - Supplier
      operationId: postSupplierCollection
      summary: 'Creates a Supplier resource.'
      responses:
        201:
          description: 'Supplier resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
          links:
            GetSupplierItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSupplierItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /suppliers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The new Supplier resource'
  '/suppliers/{id}':
    get:
      tags:
        - Supplier
      operationId: getSupplierItem
      summary: 'Retrieves a Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Supplier resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Supplier
      operationId: deleteSupplierItem
      summary: 'Removes the Supplier resource.'
      responses:
        204:
          description: 'Supplier resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Supplier
      operationId: putSupplierItem
      summary: 'Replaces the Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Supplier resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The updated Supplier resource'
    patch:
      tags:
        - Supplier
      operationId: patchSupplierItem
      summary: 'Updates the Supplier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Supplier resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Supplier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Supplier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Supplier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Supplier-write'
        description: 'The updated Supplier resource'
components:
  schemas:
    Catalogus-read:
      type: object
      description: ''
      required:
        - name
        - rsin
      properties:
        name:
          description: 'The name of this Catalogus'
          type: string
        description:
          description: 'An short description of this Catalogus'
          type: string
        logo:
          description: 'The logo for this component'
          type: string
        rsin:
          description: 'The RSIN of the organisation that provides this catalogus'
          type: string
        groups:
          readOnly: true
          description: 'The groups that are a part of this catalogus'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        products:
          readOnly: true
          description: 'The groups that are a part of this catalogus'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
    Catalogus-write:
      type: object
      description: ''
      required:
        - name
        - rsin
      properties:
        name:
          description: 'The name of this Catalogus'
          type: string
        description:
          description: 'An short description of this Catalogus'
          type: string
        logo:
          description: 'The logo for this component'
          type: string
        rsin:
          description: 'The RSIN of the organisation that provides this catalogus'
          type: string
    Group-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          description: 'The name of this product group'
          type: string
        description:
          readOnly: true
          description: 'An short description of this product group'
          type: string
        logo:
          readOnly: true
          description: 'The logo for this component'
          type: string
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        rsin:
          description: 'The RSIN of the organisation that ownes this group'
          type: string
        catalogus:
          description: 'The Catalogus that this product group belongs to'
          $ref: '#/components/schemas/Catalogus-read'
      required:
        - rsin
    Group-write:
      type: object
      description: ''
      properties:
        products:
          description: 'The groups that are a part of this product group'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
        rsin:
          description: 'The RSIN of the organisation that ownes this group'
          type: string
        catalogus:
          description: 'The Catalogus that this product group belongs to'
          $ref: '#/components/schemas/Catalogus-write'
      required:
        - rsin
    Product-read:
      type: object
      description: ''
      properties:
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo for this product'
          type: string
        movie:
          description: 'The movie for this product'
          type: string
        rsin:
          description: 'The RSIN of the organisation that ownes this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        price:
          description: |
            The price of this product
             @example 50.00
            
             @ApiProperty(
                attributes={
                    "swagger_context"={              
                        "iri"="https://schema.org/price",
                    	   "description" = "The price of this product",
                        "type"="string",
                        "example"="50.00",
                        "maxLength"="9",
                        "required" = true
                    }
                }
            )
          type: string
        tax_percentage:
          description: |
            The tax percentage for this product as an integer e.g. 9% makes 9
             @example 9
             
             @ApiProperty(
                attributes={
                    "swagger_context"={     
                    	   "description" = "The tax percentage for this product as an integer e.g. 9% makes 9",
                        "type"="integer",
                        "example"="9",
                        "maxLength"="3",
                        "minLength"="1",
                        "required" = true
                    }
                }
            )
          type: integer
        variations:
          readOnly: true
          description: 'The diverend variations that a available of this product'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
        type:
          type: string
          description: 'The type of this product. **simple**: ,**set**: ,**virtual**: ,**external**: ,**ticket**: ,**variable**: ,**subscription**,**person**,**location**,**service**'
          enum:
            - simple
            - set
            - virtual
            - external
            - ticket
            - variable
            - subscription
            - person
            - location
            - service
          example: simple
          required: 'true'
        grouped_products:
          readOnly: true
          description: 'If the product type is a **set** this contains the products that are part of that set'
          type: array
          items:
            $ref: '#/components/schemas/Product-read'
      required:
        - name
        - rsin
        - price
        - tax_percentage
        - type
    Product-write:
      type: object
      description: ''
      properties:
        sku:
          description: 'The human readable reference for this product, also known as Stock Keeping Unit (SKU)'
          type: string
        name:
          description: 'The name of this Product'
          type: string
        description:
          description: 'An short description of this Product'
          type: string
        logo:
          description: 'The logo for this product'
          type: string
        movie:
          description: 'The movie for this product'
          type: string
        rsin:
          description: 'The RSIN of the organisation that ownes this product'
          type: string
        groups:
          description: 'The product groups that this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
        price:
          description: |
            The price of this product
             @example 50.00
            
             @ApiProperty(
                attributes={
                    "swagger_context"={              
                        "iri"="https://schema.org/price",
                    	   "description" = "The price of this product",
                        "type"="string",
                        "example"="50.00",
                        "maxLength"="9",
                        "required" = true
                    }
                }
            )
          type: string
        tax_percentage:
          description: |
            The tax percentage for this product as an integer e.g. 9% makes 9
             @example 9
             
             @ApiProperty(
                attributes={
                    "swagger_context"={     
                    	   "description" = "The tax percentage for this product as an integer e.g. 9% makes 9",
                        "type"="integer",
                        "example"="9",
                        "maxLength"="3",
                        "minLength"="1",
                        "required" = true
                    }
                }
            )
          type: integer
        parent:
          description: 'The product that this product is a variation of'
          $ref: '#/components/schemas/Product-write'
        type:
          type: string
          description: 'The type of this product. **simple**: ,**set**: ,**virtual**: ,**external**: ,**ticket**: ,**variable**: ,**subscription**,**person**,**location**,**service**'
          enum:
            - simple
            - set
            - virtual
            - external
            - ticket
            - variable
            - subscription
            - person
            - location
            - service
          example: simple
          required: 'true'
        sets:
          description: 'The sets thats this product is a part of'
          type: array
          items:
            $ref: '#/components/schemas/Product-write'
      required:
        - name
        - rsin
        - price
        - tax_percentage
        - type
    Supplier-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        name:
          description: 'The name of this RequestType'
          type: string
        kvk:
          description: 'The number under wich the suplier is registerd at the chamber of comerce'
          type: string
        logo:
          description: 'The logo for this component'
          type: string
      required:
        - name
        - kvk
    Supplier-write:
      type: object
      description: ''
      required:
        - name
        - kvk
      properties:
        name:
          description: 'The name of this RequestType'
          type: string
        kvk:
          description: 'The number under wich the suplier is registerd at the chamber of comerce'
          type: string
        logo:
          description: 'The logo for this component'
          type: string
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://pdc.zaakonline.nl'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://pdc.zaakonline.nl'
  -
    description: Repository
    url: 'https://github.com/ConductionNL/productenendienstencatalogus'
x-commonground:
  type: tool
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
